import{_ as l,p as i,q as e,a1 as u}from"./framework-6700cb35.js";const t={},s=u("<p><strong>在Vue中，组件可以通过 v-on (缩写为 @) 来监听事件。</strong></p><p>绑定事件有两种方式：</p><ul><li><p><strong>内联事件处理器</strong>(自己调用函数)</p><ul><li>定义：事件触发时，直接执行js语句</li><li>内联事件处理器，回调函数的参数由我们自己传递</li><li>在内联事件中，需要使用事件对象时可以手动传入事件对象 ( $event )</li></ul></li><li><p><strong>方法事件处理器</strong>（由vue自动调用函数）</p><ul><li>事件触发时，vue对事件函数进行调用</li><li>方法事件处理器，vue会将事件对象(event)作为回调函数的参数进行传递</li><li>该事件对象就是DOM中原生的事件对象，它里面包含了事件触发时的相关信息，通过该对象可以获取一些信息：触发事件的对象、触发对象时的一些情况...同时通过该对象也可以对事件进行一些配置：取消事件的传播、取消事件的默认行为...</li></ul></li><li><p><strong>事件修饰符</strong></p><ul><li>$事件 <ul><li>.stop <ul><li>取消事件传播 ( 冒泡和捕获 )</li></ul></li><li>.capture <ul><li>在捕获阶段触发事件</li></ul></li><li>.prevent <ul><li>取消事件默认行为</li></ul></li><li>.self <ul><li>只有事件由自身触发时才会有效</li></ul></li><li>.once <ul><li>事件最多被触发一次</li></ul></li><li>.passive <ul><li>主要用于提升滚动事件的性能</li></ul></li></ul></li></ul></li></ul>",3),n=[s];function o(r,p){return i(),e("div",null,n)}const _=l(t,[["render",o],["__file","Vue事件.html.vue"]]);export{_ as default};
