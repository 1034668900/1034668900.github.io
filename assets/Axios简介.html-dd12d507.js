import{_ as t,M as l,p as r,q as e,R as i,t as o,N as n,a1 as a}from"./framework-6700cb35.js";const u={},c=a('<h2 id="axios的使用" tabindex="-1"><a class="header-anchor" href="#axios的使用" aria-hidden="true">#</a> Axios的使用</h2><ul><li>引入方式： <ol><li><p>安装axios npm i axios 引入 const axios = require(&#39;axios&#39;).default;</p></li><li><p>使用 unpkg CDN:</p><p><code>&lt;script src=&quot;https://unpkg.com/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;</code></p></li><li><p>使用 jsDelivr CDN:</p><p><code>&lt;script src=&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;</code></p></li></ol></li><li>Axios 是一个基于 <strong>promise</strong> 网络请求库，因此可以通过读取promise数据的方法来读取数据</li></ul><h2 id="axios的特点" tabindex="-1"><a class="header-anchor" href="#axios的特点" aria-hidden="true">#</a> Axios的特点</h2><ul><li>在Axios的配置对象中只有url是<strong>必须</strong>的，其它的都不是，默认发送get请求</li><li>Axios能够<strong>自动推断</strong>请求体(data)的数据类型，<strong>不需要像Fetch那样必须将请求体(body)数据进行JSON转换</strong></li><li>Axios读取数据时会<strong>自动将数据转换</strong>为JSON对象，不需要像Fetch那样通过res.json()转换后返回再读取</li><li>Axios为所有的请求方法提供了别名，但并不常用 例如 axios.request(config)</li><li>我们可以通过Axios.default.属性名 = 属性值 的方式来配置默认属性， 但是这样配置的属性是在所有axios请求中生效的，有时我们需要进行个性化配置时不便， 于是Axios还<strong>支持创建Axios的实例对象</strong>，实例对象会<strong>继承Axios的所有默认配置</strong>，而且可以<strong>单独进行个性化配置</strong></li></ul><h2 id="axios中常用的api" tabindex="-1"><a class="header-anchor" href="#axios中常用的api" aria-hidden="true">#</a> Axios中常用的API</h2><ul><li><strong>url</strong><ul><li>请求地址</li></ul></li><li><strong>method</strong><ul><li>请求方法</li></ul></li><li><strong>baseURL</strong><ul><li>可以通过设置一个 （baseURL）作为请求的根路径，后续只需为axios实例的方法传递相对 URL</li><li>（baseURL） 将自动加在 （url） 前面，除非 （url） 是一个绝对 URL。</li></ul></li><li><strong>data</strong><ul><li>请求体 可以自动推断请求体数据类型，根据数据类型来设置Content-Type的请求头，字符串设置为application/x-www-form-urlencoded，对象设置为application/json仅适用 &#39;PUT&#39;, &#39;POST&#39;, &#39;DELETE 和 &#39;PATCH&#39; 请求方法</li></ul></li><li><strong>headers</strong><ul><li>自定义请求头</li></ul></li><li><strong>params</strong><ul><li>（params） 是与请求一起发送的URL参数，必须是一个简单对象或 URLSearchParams 对象</li></ul></li><li><strong>timeout</strong><ul><li>指定请求超时的毫秒数，请求时间超过timeout就会被立即中断</li></ul></li><li><strong>responseType</strong><ul><li>指定响应类型，默认值为 responseType: &quot;json&quot;</li></ul></li><li><strong>transformRequest：[]</strong><ul><li>允许在向服务器发送前，修改请求数据,只能用于 &#39;PUT&#39;, &#39;POST&#39; 和 &#39;PATCH&#39; 这几个请求方法数组里面通常都是函数，且数组中最后一个函数必须返回一个字符串， 一个Buffer实例，ArrayBuffer，FormData，或 Stream</li></ul></li><li><strong>transformResponse：[]</strong><ul><li>（transformResponse） 在传递给 then/catch 前，允许修改响应数据</li></ul></li></ul>',6),p={href:"https://www.axios-http.cn/docs/intro",target:"_blank",rel:"noopener noreferrer"};function g(d,x){const s=l("ExternalLinkIcon");return r(),e("div",null,[c,i("p",null,[o("更多详情可参见"),i("a",p,[o("Axios官网"),n(s)])])])}const m=t(u,[["render",g],["__file","Axios简介.html.vue"]]);export{m as default};
