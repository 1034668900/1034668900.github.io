import{_ as i,p as l,q as t,a1 as r}from"./framework-6700cb35.js";const e={},a=r('<h2 id="当在浏览器中输入url地址发生了什么" tabindex="-1"><a class="header-anchor" href="#当在浏览器中输入url地址发生了什么" aria-hidden="true">#</a> 当在浏览器中输入url地址发生了什么？</h2><ul><li>https://editor.csdn.net/md/?not_checkout=1</li><li>https:// http协议</li><li>editor.csdn.net 域名</li><li>/md/?not_checkout=1 资源路径</li></ul><h2 id="域名介绍" tabindex="-1"><a class="header-anchor" href="#域名介绍" aria-hidden="true">#</a> 域名介绍</h2><p>  每台服务器都会有一个自己<strong>特有</strong>的标识来和其它服务器区分，这就是IP地址(例如192.168.0.1) ，因此我们访问服务器时都是通过<strong>IP地址</strong>来访问的，但是我们可以看到IP地址极其不利于记忆，因此后面推出了域名，它相当于是服务器的别名，因此访问服务器时我们可以通过域名来访问，但是最终访问服务器的本质还是将域名进行DNS解析，然后通过ip地址来访问的</p><ul><li><p><strong>因此当在浏览器中输入url地址</strong></p></li><li><p>1 .先通过DNS对url进行解析，获取服务器的IP地址</p></li><li><p>2 .浏览器需要和服务器建立连接(tcp/ip)(三次握手)</p></li><li><p>3 .浏览器向服务器发送请求(http协议)</p></li><li><p>4 .服务器处理请求，同时返回响应(http协议)</p></li><li><p>5 .浏览器将服务器响应回来的结果在页面上渲染</p></li><li><p>6 .浏览器和服务器断开连接(四次挥手) <strong>建立连接肯定是客户端先向服务器发送请求，但断开连接不一定，谁数据发送完毕谁申请断开</strong></p></li></ul><h2 id="客户端是如何和服务器建立-断开-连接的-tcp-ip连接" tabindex="-1"><a class="header-anchor" href="#客户端是如何和服务器建立-断开-连接的-tcp-ip连接" aria-hidden="true">#</a> 客户端是如何和服务器建立(断开)连接的？(tcp/ip连接)</h2><p>客户端和服务器是通过<strong>三次握手</strong>建立连接，通过<strong>四次挥手</strong>断开连接</p><h2 id="三次握手" tabindex="-1"><a class="header-anchor" href="#三次握手" aria-hidden="true">#</a> 三次握手</h2><ul><li>客户端向服务器发送连接的请求(SYN）</li><li>服务器收到请求，向客户端返回信息(ACK SYN),表示服务器同意客户端的连接申请，并向客户端申请连接</li><li>客户端收到请求，向服务器返回信息(ACK)，表示同意服务器的连接请求</li></ul><h2 id="四次挥手-以服务器请求断开为例" tabindex="-1"><a class="header-anchor" href="#四次挥手-以服务器请求断开为例" aria-hidden="true">#</a> 四次挥手(以服务器请求断开为例）</h2><ul><li>服务器向客户端发送请求(FIN)，通知客户端数据已发送完毕,请求断开连接</li><li>客户端接收到请求,向服务器返回信息(ACK)，表示已知晓该请求</li><li>客户端数据接收完毕，向服务器发送请求(FIN, ACK)，通知服务器数据已接收完毕，请求断开</li><li>服务器接收到客户端的请求，并返回(ACK)，同意断开连接</li></ul>',11),n=[a];function h(s,d){return l(),t("div",null,n)}const p=i(e,[["render",h],["__file","浏览器解析url过程.html.vue"]]);export{p as default};
